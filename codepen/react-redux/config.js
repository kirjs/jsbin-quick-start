var config = {"lib":{"description":"qs.js.org quickstart template for Redux + React","config":{"source":"https://twitter.com/dan_abramov/status/663002368976560129","group":"Frameworks","jsPreprocessor":"jsx"},"author":"Kirill Cherkashin","data":{"js":"/*\n * How is the next application state calculated,\n * given the current state and the action?\n */\nconst counter = (state = 0, action) =>{\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n    case 'DECREMENT':\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\n/*\n * What does UI look like, assuming it doesn't know\n * about the state or actions, and is a function\n * of the props?\n */\nconst Counter = (props) => (\n  <div>\n    <h1>Hello, World!</h1>\n    <h2>{props.value}</h2>\n    <button onClick={props.onIncrement}>+</button>\n    <button onClick={props.onDecrement}>-</button>\n  </div>\n);\n\n/*\n * Which injected props should be calculated\n * from the application state and how?\n */\nconst mapStateToProps = (state) =>{\n  return {\n    value: state\n  };\n};\n\n/*\n * Which injected props should be callbacks\n * that dispatch actions, and which actions?\n */\nconst mapDispatchToProps = (dispatch) =>{\n  return {\n    onIncrement: () =>{\n      dispatch({\n        type: 'INCREMENT'\n      })\n    },\n    onDecrement: () =>{\n      dispatch({\n        type: 'DECREMENT'\n      })\n    }\n  };\n};\n\n/*\n * Let's create a container component\n * that injects props into the pure UI component\n * according to the instructions above, but\n * instead of all those props, accepts a store.\n */\nconst { connect } = ReactRedux;\nconst CounterContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter);\n\n/*\n * Let's create a store.\n */\nconst { createStore } = Redux;\nconst store = createStore(counter);\n\n/*\n * Finally, render the container,\n * passing the store to it.\n */\nReactDOM.render(\n  <CounterContainer store={store}/>,\n  document.getElementById('root')\n);\n","html":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Redux + React  started with qs.js.org</title>\n    <script src=\"https://fb.me/react-0.14.1.min.js\"></script>\n    <script src=\"https://fb.me/react-dom-0.14.1.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/3.5.2/redux.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/4.4.5/react-redux.min.js\"></script>\n</head>\n<body>\n<div id='root'></div>\n</body>\n</html>\n","css":""},"key":"react-redux"},"playground":{"key":"codepen","label":"Codepen"}};